#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HQKTravel.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HKQTravelingWebsite2")]
	public partial class dbTravelTourDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertBooking_Tour(Booking_Tour instance);
    partial void UpdateBooking_Tour(Booking_Tour instance);
    partial void DeleteBooking_Tour(Booking_Tour instance);
    partial void InsertBookingFlightTour(BookingFlightTour instance);
    partial void UpdateBookingFlightTour(BookingFlightTour instance);
    partial void DeleteBookingFlightTour(BookingFlightTour instance);
    partial void InsertBookingHotelTour(BookingHotelTour instance);
    partial void UpdateBookingHotelTour(BookingHotelTour instance);
    partial void DeleteBookingHotelTour(BookingHotelTour instance);
    partial void InsertBookingIndividual(BookingIndividual instance);
    partial void UpdateBookingIndividual(BookingIndividual instance);
    partial void DeleteBookingIndividual(BookingIndividual instance);
    partial void InsertDestination(Destination instance);
    partial void UpdateDestination(Destination instance);
    partial void DeleteDestination(Destination instance);
    partial void InsertDetail_Tour(Detail_Tour instance);
    partial void UpdateDetail_Tour(Detail_Tour instance);
    partial void DeleteDetail_Tour(Detail_Tour instance);
    partial void InsertDetail_Service(Detail_Service instance);
    partial void UpdateDetail_Service(Detail_Service instance);
    partial void DeleteDetail_Service(Detail_Service instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertFlight(Flight instance);
    partial void UpdateFlight(Flight instance);
    partial void DeleteFlight(Flight instance);
    partial void InsertHISTORY_BILL(HISTORY_BILL instance);
    partial void UpdateHISTORY_BILL(HISTORY_BILL instance);
    partial void DeleteHISTORY_BILL(HISTORY_BILL instance);
    partial void InsertHotel(Hotel instance);
    partial void UpdateHotel(Hotel instance);
    partial void DeleteHotel(Hotel instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertTour_Type(Tour_Type instance);
    partial void UpdateTour_Type(Tour_Type instance);
    partial void DeleteTour_Type(Tour_Type instance);
    partial void InsertGuest_with_Account(Guest_with_Account instance);
    partial void UpdateGuest_with_Account(Guest_with_Account instance);
    partial void DeleteGuest_with_Account(Guest_with_Account instance);
        #endregion

        public dbTravelTourDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HKQTravelingWebsite2ConnectionString1"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public dbTravelTourDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelTourDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelTourDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Booking_Tour> Booking_Tours
		{
			get
			{
				return this.GetTable<Booking_Tour>();
			}
		}
		
		public System.Data.Linq.Table<BookingFlightTour> BookingFlightTours
		{
			get
			{
				return this.GetTable<BookingFlightTour>();
			}
		}
		
		public System.Data.Linq.Table<BookingHotelTour> BookingHotelTours
		{
			get
			{
				return this.GetTable<BookingHotelTour>();
			}
		}
		
		public System.Data.Linq.Table<BookingIndividual> BookingIndividuals
		{
			get
			{
				return this.GetTable<BookingIndividual>();
			}
		}
		
		public System.Data.Linq.Table<Destination> Destinations
		{
			get
			{
				return this.GetTable<Destination>();
			}
		}
		
		public System.Data.Linq.Table<Detail_Tour> Detail_Tours
		{
			get
			{
				return this.GetTable<Detail_Tour>();
			}
		}
		
		public System.Data.Linq.Table<Detail_Service> Detail_Services
		{
			get
			{
				return this.GetTable<Detail_Service>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<Flight> Flights
		{
			get
			{
				return this.GetTable<Flight>();
			}
		}
		
		public System.Data.Linq.Table<HISTORY_BILL> HISTORY_BILLs
		{
			get
			{
				return this.GetTable<HISTORY_BILL>();
			}
		}
		
		public System.Data.Linq.Table<Hotel> Hotels
		{
			get
			{
				return this.GetTable<Hotel>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<Tour_Type> Tour_Types
		{
			get
			{
				return this.GetTable<Tour_Type>();
			}
		}
		
		public System.Data.Linq.Table<Guest_with_Account> Guest_with_Accounts
		{
			get
			{
				return this.GetTable<Guest_with_Account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_admin;
		
		private string _user_name;
		
		private string _pass_word;
		
		private string _fullName;
		
		private System.Nullable<int> _status;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_adminChanging(long value);
    partial void Onid_adminChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onpass_wordChanging(string value);
    partial void Onpass_wordChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_admin", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_admin
		{
			get
			{
				return this._id_admin;
			}
			set
			{
				if ((this._id_admin != value))
				{
					this.Onid_adminChanging(value);
					this.SendPropertyChanging();
					this._id_admin = value;
					this.SendPropertyChanged("id_admin");
					this.Onid_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass_word", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string pass_word
		{
			get
			{
				return this._pass_word;
			}
			set
			{
				if ((this._pass_word != value))
				{
					this.Onpass_wordChanging(value);
					this.SendPropertyChanging();
					this._pass_word = value;
					this.SendPropertyChanged("pass_word");
					this.Onpass_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(50)")]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Bill;
		
		private System.Nullable<long> _ID_BookingFlightTour;
		
		private System.Nullable<long> _ID_BookingIndividual;
		
		private System.Nullable<long> _ID_BookingHotelTour;
		
		private System.Nullable<long> _id_BookingTour;
		
		private System.Nullable<long> _id_Staff;
		
		private System.Nullable<decimal> _total_Price;
		
		private System.Nullable<System.DateTime> _Bill_Date;
		
		private System.DateTime _Date_Create;
		
		private EntitySet<HISTORY_BILL> _HISTORY_BILLs;
		
		private EntityRef<Booking_Tour> _Booking_Tour;
		
		private EntityRef<BookingFlightTour> _BookingFlightTour;
		
		private EntityRef<BookingHotelTour> _BookingHotelTour;
		
		private EntityRef<BookingIndividual> _BookingIndividual;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BillChanging(long value);
    partial void Onid_BillChanged();
    partial void OnID_BookingFlightTourChanging(System.Nullable<long> value);
    partial void OnID_BookingFlightTourChanged();
    partial void OnID_BookingIndividualChanging(System.Nullable<long> value);
    partial void OnID_BookingIndividualChanged();
    partial void OnID_BookingHotelTourChanging(System.Nullable<long> value);
    partial void OnID_BookingHotelTourChanged();
    partial void Onid_BookingTourChanging(System.Nullable<long> value);
    partial void Onid_BookingTourChanged();
    partial void Onid_StaffChanging(System.Nullable<long> value);
    partial void Onid_StaffChanged();
    partial void Ontotal_PriceChanging(System.Nullable<decimal> value);
    partial void Ontotal_PriceChanged();
    partial void OnBill_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnBill_DateChanged();
    partial void OnDate_CreateChanging(System.DateTime value);
    partial void OnDate_CreateChanged();
    #endregion
		
		public Bill()
		{
			this._HISTORY_BILLs = new EntitySet<HISTORY_BILL>(new Action<HISTORY_BILL>(this.attach_HISTORY_BILLs), new Action<HISTORY_BILL>(this.detach_HISTORY_BILLs));
			this._Booking_Tour = default(EntityRef<Booking_Tour>);
			this._BookingFlightTour = default(EntityRef<BookingFlightTour>);
			this._BookingHotelTour = default(EntityRef<BookingHotelTour>);
			this._BookingIndividual = default(EntityRef<BookingIndividual>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Bill", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Bill
		{
			get
			{
				return this._id_Bill;
			}
			set
			{
				if ((this._id_Bill != value))
				{
					this.Onid_BillChanging(value);
					this.SendPropertyChanging();
					this._id_Bill = value;
					this.SendPropertyChanged("id_Bill");
					this.Onid_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingFlightTour", DbType="BigInt")]
		public System.Nullable<long> ID_BookingFlightTour
		{
			get
			{
				return this._ID_BookingFlightTour;
			}
			set
			{
				if ((this._ID_BookingFlightTour != value))
				{
					if (this._BookingFlightTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BookingFlightTourChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingFlightTour = value;
					this.SendPropertyChanged("ID_BookingFlightTour");
					this.OnID_BookingFlightTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingIndividual", DbType="BigInt")]
		public System.Nullable<long> ID_BookingIndividual
		{
			get
			{
				return this._ID_BookingIndividual;
			}
			set
			{
				if ((this._ID_BookingIndividual != value))
				{
					if (this._BookingIndividual.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BookingIndividualChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingIndividual = value;
					this.SendPropertyChanged("ID_BookingIndividual");
					this.OnID_BookingIndividualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingHotelTour", DbType="BigInt")]
		public System.Nullable<long> ID_BookingHotelTour
		{
			get
			{
				return this._ID_BookingHotelTour;
			}
			set
			{
				if ((this._ID_BookingHotelTour != value))
				{
					if (this._BookingHotelTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BookingHotelTourChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingHotelTour = value;
					this.SendPropertyChanged("ID_BookingHotelTour");
					this.OnID_BookingHotelTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookingTour", DbType="BigInt")]
		public System.Nullable<long> id_BookingTour
		{
			get
			{
				return this._id_BookingTour;
			}
			set
			{
				if ((this._id_BookingTour != value))
				{
					if (this._Booking_Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookingTourChanging(value);
					this.SendPropertyChanging();
					this._id_BookingTour = value;
					this.SendPropertyChanged("id_BookingTour");
					this.Onid_BookingTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Staff", DbType="BigInt")]
		public System.Nullable<long> id_Staff
		{
			get
			{
				return this._id_Staff;
			}
			set
			{
				if ((this._id_Staff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_StaffChanging(value);
					this.SendPropertyChanging();
					this._id_Staff = value;
					this.SendPropertyChanged("id_Staff");
					this.Onid_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_Price
		{
			get
			{
				return this._total_Price;
			}
			set
			{
				if ((this._total_Price != value))
				{
					this.Ontotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._total_Price = value;
					this.SendPropertyChanged("total_Price");
					this.Ontotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bill_Date
		{
			get
			{
				return this._Bill_Date;
			}
			set
			{
				if ((this._Bill_Date != value))
				{
					this.OnBill_DateChanging(value);
					this.SendPropertyChanging();
					this._Bill_Date = value;
					this.SendPropertyChanged("Bill_Date");
					this.OnBill_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_HISTORY_BILL", Storage="_HISTORY_BILLs", ThisKey="id_Bill", OtherKey="id_Bill")]
		public EntitySet<HISTORY_BILL> HISTORY_BILLs
		{
			get
			{
				return this._HISTORY_BILLs;
			}
			set
			{
				this._HISTORY_BILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Bill", Storage="_Booking_Tour", ThisKey="id_BookingTour", OtherKey="id_BookingTour", IsForeignKey=true, DeleteRule="CASCADE")]
		public Booking_Tour Booking_Tour
		{
			get
			{
				return this._Booking_Tour.Entity;
			}
			set
			{
				Booking_Tour previousValue = this._Booking_Tour.Entity;
				if (((previousValue != value) 
							|| (this._Booking_Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking_Tour.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Booking_Tour.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._id_BookingTour = value.id_BookingTour;
					}
					else
					{
						this._id_BookingTour = default(Nullable<long>);
					}
					this.SendPropertyChanged("Booking_Tour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingFlightTour_Bill", Storage="_BookingFlightTour", ThisKey="ID_BookingFlightTour", OtherKey="ID_BookingFlightTour", IsForeignKey=true)]
		public BookingFlightTour BookingFlightTour
		{
			get
			{
				return this._BookingFlightTour.Entity;
			}
			set
			{
				BookingFlightTour previousValue = this._BookingFlightTour.Entity;
				if (((previousValue != value) 
							|| (this._BookingFlightTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingFlightTour.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._BookingFlightTour.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._ID_BookingFlightTour = value.ID_BookingFlightTour;
					}
					else
					{
						this._ID_BookingFlightTour = default(Nullable<long>);
					}
					this.SendPropertyChanged("BookingFlightTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingHotelTour_Bill", Storage="_BookingHotelTour", ThisKey="ID_BookingHotelTour", OtherKey="ID_BookingHotelTour", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookingHotelTour BookingHotelTour
		{
			get
			{
				return this._BookingHotelTour.Entity;
			}
			set
			{
				BookingHotelTour previousValue = this._BookingHotelTour.Entity;
				if (((previousValue != value) 
							|| (this._BookingHotelTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingHotelTour.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._BookingHotelTour.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._ID_BookingHotelTour = value.ID_BookingHotelTour;
					}
					else
					{
						this._ID_BookingHotelTour = default(Nullable<long>);
					}
					this.SendPropertyChanged("BookingHotelTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingIndividual_Bill", Storage="_BookingIndividual", ThisKey="ID_BookingIndividual", OtherKey="ID_BookingIndividual", IsForeignKey=true)]
		public BookingIndividual BookingIndividual
		{
			get
			{
				return this._BookingIndividual.Entity;
			}
			set
			{
				BookingIndividual previousValue = this._BookingIndividual.Entity;
				if (((previousValue != value) 
							|| (this._BookingIndividual.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingIndividual.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._BookingIndividual.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._ID_BookingIndividual = value.ID_BookingIndividual;
					}
					else
					{
						this._ID_BookingIndividual = default(Nullable<long>);
					}
					this.SendPropertyChanged("BookingIndividual");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Staff", ThisKey="id_Staff", OtherKey="id_Staff", IsForeignKey=true, DeleteRule="CASCADE")]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._id_Staff = value.id_Staff;
					}
					else
					{
						this._id_Staff = default(Nullable<long>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HISTORY_BILLs(HISTORY_BILL entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_HISTORY_BILLs(HISTORY_BILL entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking_Tour")]
	public partial class Booking_Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_BookingTour;
		
		private System.DateTime _Booking_Date;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<int> _Status;
		
		private System.DateTime _Date_Create;
		
		private System.Nullable<System.DateTime> _Date_Update;
		
		private long _id_guest_with_account;
		
		private EntitySet<Bill> _Bills;
		
		private EntitySet<Detail_Tour> _Detail_Tours;
		
		private EntitySet<Detail_Service> _Detail_Services;
		
		private EntityRef<Guest_with_Account> _Guest_with_Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BookingTourChanging(long value);
    partial void Onid_BookingTourChanged();
    partial void OnBooking_DateChanging(System.DateTime value);
    partial void OnBooking_DateChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDate_CreateChanging(System.DateTime value);
    partial void OnDate_CreateChanged();
    partial void OnDate_UpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_UpdateChanged();
    partial void Onid_guest_with_accountChanging(long value);
    partial void Onid_guest_with_accountChanged();
    #endregion
		
		public Booking_Tour()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Detail_Tours = new EntitySet<Detail_Tour>(new Action<Detail_Tour>(this.attach_Detail_Tours), new Action<Detail_Tour>(this.detach_Detail_Tours));
			this._Detail_Services = new EntitySet<Detail_Service>(new Action<Detail_Service>(this.attach_Detail_Services), new Action<Detail_Service>(this.detach_Detail_Services));
			this._Guest_with_Account = default(EntityRef<Guest_with_Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookingTour", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_BookingTour
		{
			get
			{
				return this._id_BookingTour;
			}
			set
			{
				if ((this._id_BookingTour != value))
				{
					this.Onid_BookingTourChanging(value);
					this.SendPropertyChanging();
					this._id_BookingTour = value;
					this.SendPropertyChanged("id_BookingTour");
					this.Onid_BookingTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Booking_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Booking_Date
		{
			get
			{
				return this._Booking_Date;
			}
			set
			{
				if ((this._Booking_Date != value))
				{
					this.OnBooking_DateChanging(value);
					this.SendPropertyChanging();
					this._Booking_Date = value;
					this.SendPropertyChanged("Booking_Date");
					this.OnBooking_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Update", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Update
		{
			get
			{
				return this._Date_Update;
			}
			set
			{
				if ((this._Date_Update != value))
				{
					this.OnDate_UpdateChanging(value);
					this.SendPropertyChanging();
					this._Date_Update = value;
					this.SendPropertyChanged("Date_Update");
					this.OnDate_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_guest_with_account", DbType="BigInt NOT NULL")]
		public long id_guest_with_account
		{
			get
			{
				return this._id_guest_with_account;
			}
			set
			{
				if ((this._id_guest_with_account != value))
				{
					if (this._Guest_with_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_guest_with_accountChanging(value);
					this.SendPropertyChanging();
					this._id_guest_with_account = value;
					this.SendPropertyChanged("id_guest_with_account");
					this.Onid_guest_with_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Bill", Storage="_Bills", ThisKey="id_BookingTour", OtherKey="id_BookingTour")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Detail_Tour", Storage="_Detail_Tours", ThisKey="id_BookingTour", OtherKey="id_BookingTour")]
		public EntitySet<Detail_Tour> Detail_Tours
		{
			get
			{
				return this._Detail_Tours;
			}
			set
			{
				this._Detail_Tours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Detail_Service", Storage="_Detail_Services", ThisKey="id_BookingTour", OtherKey="id_BookingTour")]
		public EntitySet<Detail_Service> Detail_Services
		{
			get
			{
				return this._Detail_Services;
			}
			set
			{
				this._Detail_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Guest_with_Account_Booking_Tour", Storage="_Guest_with_Account", ThisKey="id_guest_with_account", OtherKey="id_guest_with_account", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Guest_with_Account Guest_with_Account
		{
			get
			{
				return this._Guest_with_Account.Entity;
			}
			set
			{
				Guest_with_Account previousValue = this._Guest_with_Account.Entity;
				if (((previousValue != value) 
							|| (this._Guest_with_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Guest_with_Account.Entity = null;
						previousValue.Booking_Tours.Remove(this);
					}
					this._Guest_with_Account.Entity = value;
					if ((value != null))
					{
						value.Booking_Tours.Add(this);
						this._id_guest_with_account = value.id_guest_with_account;
					}
					else
					{
						this._id_guest_with_account = default(long);
					}
					this.SendPropertyChanged("Guest_with_Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = null;
		}
		
		private void attach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = this;
		}
		
		private void detach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = null;
		}
		
		private void attach_Detail_Services(Detail_Service entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = this;
		}
		
		private void detach_Detail_Services(Detail_Service entity)
		{
			this.SendPropertyChanging();
			entity.Booking_Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingFlightTour")]
	public partial class BookingFlightTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_BookingFlightTour;
		
		private long _id_Tour;
		
		private long _id_Flight;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Flight> _Flight;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BookingFlightTourChanging(long value);
    partial void OnID_BookingFlightTourChanged();
    partial void Onid_TourChanging(long value);
    partial void Onid_TourChanged();
    partial void Onid_FlightChanging(long value);
    partial void Onid_FlightChanged();
    #endregion
		
		public BookingFlightTour()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Flight = default(EntityRef<Flight>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingFlightTour", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_BookingFlightTour
		{
			get
			{
				return this._ID_BookingFlightTour;
			}
			set
			{
				if ((this._ID_BookingFlightTour != value))
				{
					this.OnID_BookingFlightTourChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingFlightTour = value;
					this.SendPropertyChanged("ID_BookingFlightTour");
					this.OnID_BookingFlightTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tour", DbType="BigInt NOT NULL")]
		public long id_Tour
		{
			get
			{
				return this._id_Tour;
			}
			set
			{
				if ((this._id_Tour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TourChanging(value);
					this.SendPropertyChanging();
					this._id_Tour = value;
					this.SendPropertyChanged("id_Tour");
					this.Onid_TourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Flight", DbType="BigInt NOT NULL")]
		public long id_Flight
		{
			get
			{
				return this._id_Flight;
			}
			set
			{
				if ((this._id_Flight != value))
				{
					if (this._Flight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_FlightChanging(value);
					this.SendPropertyChanging();
					this._id_Flight = value;
					this.SendPropertyChanged("id_Flight");
					this.Onid_FlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingFlightTour_Bill", Storage="_Bills", ThisKey="ID_BookingFlightTour", OtherKey="ID_BookingFlightTour")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_BookingFlightTour", Storage="_Flight", ThisKey="id_Flight", OtherKey="id_Flight", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Flight Flight
		{
			get
			{
				return this._Flight.Entity;
			}
			set
			{
				Flight previousValue = this._Flight.Entity;
				if (((previousValue != value) 
							|| (this._Flight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight.Entity = null;
						previousValue.BookingFlightTours.Remove(this);
					}
					this._Flight.Entity = value;
					if ((value != null))
					{
						value.BookingFlightTours.Add(this);
						this._id_Flight = value.id_Flight;
					}
					else
					{
						this._id_Flight = default(long);
					}
					this.SendPropertyChanged("Flight");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingFlightTour", Storage="_Tour", ThisKey="id_Tour", OtherKey="id_Tour", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.BookingFlightTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.BookingFlightTours.Add(this);
						this._id_Tour = value.id_Tour;
					}
					else
					{
						this._id_Tour = default(long);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingFlightTour = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingFlightTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingHotelTour")]
	public partial class BookingHotelTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_BookingHotelTour;
		
		private System.DateTime _CheckInDate;
		
		private System.DateTime _CheckOutDate;
		
		private long _id_Tour;
		
		private long _id_Hotel;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BookingHotelTourChanging(long value);
    partial void OnID_BookingHotelTourChanged();
    partial void OnCheckInDateChanging(System.DateTime value);
    partial void OnCheckInDateChanged();
    partial void OnCheckOutDateChanging(System.DateTime value);
    partial void OnCheckOutDateChanged();
    partial void Onid_TourChanging(long value);
    partial void Onid_TourChanged();
    partial void Onid_HotelChanging(long value);
    partial void Onid_HotelChanged();
    #endregion
		
		public BookingHotelTour()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Hotel = default(EntityRef<Hotel>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingHotelTour", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_BookingHotelTour
		{
			get
			{
				return this._ID_BookingHotelTour;
			}
			set
			{
				if ((this._ID_BookingHotelTour != value))
				{
					this.OnID_BookingHotelTourChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingHotelTour = value;
					this.SendPropertyChanged("ID_BookingHotelTour");
					this.OnID_BookingHotelTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckInDate
		{
			get
			{
				return this._CheckInDate;
			}
			set
			{
				if ((this._CheckInDate != value))
				{
					this.OnCheckInDateChanging(value);
					this.SendPropertyChanging();
					this._CheckInDate = value;
					this.SendPropertyChanged("CheckInDate");
					this.OnCheckInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckOutDate
		{
			get
			{
				return this._CheckOutDate;
			}
			set
			{
				if ((this._CheckOutDate != value))
				{
					this.OnCheckOutDateChanging(value);
					this.SendPropertyChanging();
					this._CheckOutDate = value;
					this.SendPropertyChanged("CheckOutDate");
					this.OnCheckOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tour", DbType="BigInt NOT NULL")]
		public long id_Tour
		{
			get
			{
				return this._id_Tour;
			}
			set
			{
				if ((this._id_Tour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TourChanging(value);
					this.SendPropertyChanging();
					this._id_Tour = value;
					this.SendPropertyChanged("id_Tour");
					this.Onid_TourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Hotel", DbType="BigInt NOT NULL")]
		public long id_Hotel
		{
			get
			{
				return this._id_Hotel;
			}
			set
			{
				if ((this._id_Hotel != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_HotelChanging(value);
					this.SendPropertyChanging();
					this._id_Hotel = value;
					this.SendPropertyChanged("id_Hotel");
					this.Onid_HotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingHotelTour_Bill", Storage="_Bills", ThisKey="ID_BookingHotelTour", OtherKey="ID_BookingHotelTour")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_BookingHotelTour", Storage="_Hotel", ThisKey="id_Hotel", OtherKey="id_Hotel", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.BookingHotelTours.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.BookingHotelTours.Add(this);
						this._id_Hotel = value.id_Hotel;
					}
					else
					{
						this._id_Hotel = default(long);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingHotelTour", Storage="_Tour", ThisKey="id_Tour", OtherKey="id_Tour", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.BookingHotelTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.BookingHotelTours.Add(this);
						this._id_Tour = value.id_Tour;
					}
					else
					{
						this._id_Tour = default(long);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingHotelTour = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingHotelTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingIndividual")]
	public partial class BookingIndividual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_BookingIndividual;
		
		private System.Nullable<long> _id_Hotel;
		
		private System.Nullable<long> _id_Flight;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Flight> _Flight;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BookingIndividualChanging(long value);
    partial void OnID_BookingIndividualChanged();
    partial void Onid_HotelChanging(System.Nullable<long> value);
    partial void Onid_HotelChanged();
    partial void Onid_FlightChanging(System.Nullable<long> value);
    partial void Onid_FlightChanged();
    #endregion
		
		public BookingIndividual()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Flight = default(EntityRef<Flight>);
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BookingIndividual", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_BookingIndividual
		{
			get
			{
				return this._ID_BookingIndividual;
			}
			set
			{
				if ((this._ID_BookingIndividual != value))
				{
					this.OnID_BookingIndividualChanging(value);
					this.SendPropertyChanging();
					this._ID_BookingIndividual = value;
					this.SendPropertyChanged("ID_BookingIndividual");
					this.OnID_BookingIndividualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Hotel", DbType="BigInt")]
		public System.Nullable<long> id_Hotel
		{
			get
			{
				return this._id_Hotel;
			}
			set
			{
				if ((this._id_Hotel != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_HotelChanging(value);
					this.SendPropertyChanging();
					this._id_Hotel = value;
					this.SendPropertyChanged("id_Hotel");
					this.Onid_HotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Flight", DbType="BigInt")]
		public System.Nullable<long> id_Flight
		{
			get
			{
				return this._id_Flight;
			}
			set
			{
				if ((this._id_Flight != value))
				{
					if (this._Flight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_FlightChanging(value);
					this.SendPropertyChanging();
					this._id_Flight = value;
					this.SendPropertyChanged("id_Flight");
					this.Onid_FlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingIndividual_Bill", Storage="_Bills", ThisKey="ID_BookingIndividual", OtherKey="ID_BookingIndividual")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_BookingIndividual", Storage="_Flight", ThisKey="id_Flight", OtherKey="id_Flight", IsForeignKey=true, DeleteRule="CASCADE")]
		public Flight Flight
		{
			get
			{
				return this._Flight.Entity;
			}
			set
			{
				Flight previousValue = this._Flight.Entity;
				if (((previousValue != value) 
							|| (this._Flight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight.Entity = null;
						previousValue.BookingIndividuals.Remove(this);
					}
					this._Flight.Entity = value;
					if ((value != null))
					{
						value.BookingIndividuals.Add(this);
						this._id_Flight = value.id_Flight;
					}
					else
					{
						this._id_Flight = default(Nullable<long>);
					}
					this.SendPropertyChanged("Flight");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_BookingIndividual", Storage="_Hotel", ThisKey="id_Hotel", OtherKey="id_Hotel", IsForeignKey=true, DeleteRule="CASCADE")]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.BookingIndividuals.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.BookingIndividuals.Add(this);
						this._id_Hotel = value.id_Hotel;
					}
					else
					{
						this._id_Hotel = default(Nullable<long>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingIndividual = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.BookingIndividual = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Destination")]
	public partial class Destination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Destination;
		
		private string _Name;
		
		private string _Image;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DestinationChanging(long value);
    partial void Onid_DestinationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Destination()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Destination", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Destination
		{
			get
			{
				return this._id_Destination;
			}
			set
			{
				if ((this._id_Destination != value))
				{
					this.Onid_DestinationChanging(value);
					this.SendPropertyChanging();
					this._id_Destination = value;
					this.SendPropertyChanged("id_Destination");
					this.Onid_DestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Destination_Tour", Storage="_Tours", ThisKey="id_Destination", OtherKey="id_Destination")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Destination = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Destination = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail_Tour")]
	public partial class Detail_Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Tour;
		
		private long _id_BookingTour;
		
		private System.Nullable<int> _Num_Adult;
		
		private System.Nullable<int> _Num_Child;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _Departure_Date_Reality;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private System.Nullable<long> _id_Discount;
		
		private EntityRef<Booking_Tour> _Booking_Tour;
		
		private EntityRef<Discount> _Discount;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_TourChanging(long value);
    partial void Onid_TourChanged();
    partial void Onid_BookingTourChanging(long value);
    partial void Onid_BookingTourChanged();
    partial void OnNum_AdultChanging(System.Nullable<int> value);
    partial void OnNum_AdultChanged();
    partial void OnNum_ChildChanging(System.Nullable<int> value);
    partial void OnNum_ChildChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeparture_Date_RealityChanging(System.Nullable<System.DateTime> value);
    partial void OnDeparture_Date_RealityChanged();
    partial void OnReturn_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturn_DateChanged();
    partial void Onid_DiscountChanging(System.Nullable<long> value);
    partial void Onid_DiscountChanged();
    #endregion
		
		public Detail_Tour()
		{
			this._Booking_Tour = default(EntityRef<Booking_Tour>);
			this._Discount = default(EntityRef<Discount>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tour", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id_Tour
		{
			get
			{
				return this._id_Tour;
			}
			set
			{
				if ((this._id_Tour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TourChanging(value);
					this.SendPropertyChanging();
					this._id_Tour = value;
					this.SendPropertyChanged("id_Tour");
					this.Onid_TourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookingTour", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id_BookingTour
		{
			get
			{
				return this._id_BookingTour;
			}
			set
			{
				if ((this._id_BookingTour != value))
				{
					if (this._Booking_Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookingTourChanging(value);
					this.SendPropertyChanging();
					this._id_BookingTour = value;
					this.SendPropertyChanged("id_BookingTour");
					this.Onid_BookingTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Adult", DbType="Int")]
		public System.Nullable<int> Num_Adult
		{
			get
			{
				return this._Num_Adult;
			}
			set
			{
				if ((this._Num_Adult != value))
				{
					this.OnNum_AdultChanging(value);
					this.SendPropertyChanging();
					this._Num_Adult = value;
					this.SendPropertyChanged("Num_Adult");
					this.OnNum_AdultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Child", DbType="Int")]
		public System.Nullable<int> Num_Child
		{
			get
			{
				return this._Num_Child;
			}
			set
			{
				if ((this._Num_Child != value))
				{
					this.OnNum_ChildChanging(value);
					this.SendPropertyChanging();
					this._Num_Child = value;
					this.SendPropertyChanged("Num_Child");
					this.OnNum_ChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure_Date_Reality", DbType="DateTime")]
		public System.Nullable<System.DateTime> Departure_Date_Reality
		{
			get
			{
				return this._Departure_Date_Reality;
			}
			set
			{
				if ((this._Departure_Date_Reality != value))
				{
					this.OnDeparture_Date_RealityChanging(value);
					this.SendPropertyChanging();
					this._Departure_Date_Reality = value;
					this.SendPropertyChanged("Departure_Date_Reality");
					this.OnDeparture_Date_RealityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this.OnReturn_DateChanging(value);
					this.SendPropertyChanging();
					this._Return_Date = value;
					this.SendPropertyChanged("Return_Date");
					this.OnReturn_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Discount", DbType="BigInt")]
		public System.Nullable<long> id_Discount
		{
			get
			{
				return this._id_Discount;
			}
			set
			{
				if ((this._id_Discount != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DiscountChanging(value);
					this.SendPropertyChanging();
					this._id_Discount = value;
					this.SendPropertyChanged("id_Discount");
					this.Onid_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Detail_Tour", Storage="_Booking_Tour", ThisKey="id_BookingTour", OtherKey="id_BookingTour", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Booking_Tour Booking_Tour
		{
			get
			{
				return this._Booking_Tour.Entity;
			}
			set
			{
				Booking_Tour previousValue = this._Booking_Tour.Entity;
				if (((previousValue != value) 
							|| (this._Booking_Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking_Tour.Entity = null;
						previousValue.Detail_Tours.Remove(this);
					}
					this._Booking_Tour.Entity = value;
					if ((value != null))
					{
						value.Detail_Tours.Add(this);
						this._id_BookingTour = value.id_BookingTour;
					}
					else
					{
						this._id_BookingTour = default(long);
					}
					this.SendPropertyChanged("Booking_Tour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Detail_Tour", Storage="_Discount", ThisKey="id_Discount", OtherKey="id_Discount", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.Detail_Tours.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.Detail_Tours.Add(this);
						this._id_Discount = value.id_Discount;
					}
					else
					{
						this._id_Discount = default(Nullable<long>);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Detail_Tour", Storage="_Tour", ThisKey="id_Tour", OtherKey="id_Tour", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.Detail_Tours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.Detail_Tours.Add(this);
						this._id_Tour = value.id_Tour;
					}
					else
					{
						this._id_Tour = default(long);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail_Service")]
	public partial class Detail_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_BookingTour;
		
		private long _id_Service;
		
		private System.Nullable<int> _Quantity_Service;
		
		private EntityRef<Booking_Tour> _Booking_Tour;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BookingTourChanging(long value);
    partial void Onid_BookingTourChanged();
    partial void Onid_ServiceChanging(long value);
    partial void Onid_ServiceChanged();
    partial void OnQuantity_ServiceChanging(System.Nullable<int> value);
    partial void OnQuantity_ServiceChanged();
    #endregion
		
		public Detail_Service()
		{
			this._Booking_Tour = default(EntityRef<Booking_Tour>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookingTour", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id_BookingTour
		{
			get
			{
				return this._id_BookingTour;
			}
			set
			{
				if ((this._id_BookingTour != value))
				{
					if (this._Booking_Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookingTourChanging(value);
					this.SendPropertyChanging();
					this._id_BookingTour = value;
					this.SendPropertyChanged("id_BookingTour");
					this.Onid_BookingTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Service", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id_Service
		{
			get
			{
				return this._id_Service;
			}
			set
			{
				if ((this._id_Service != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ServiceChanging(value);
					this.SendPropertyChanging();
					this._id_Service = value;
					this.SendPropertyChanged("id_Service");
					this.Onid_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity_Service", DbType="Int")]
		public System.Nullable<int> Quantity_Service
		{
			get
			{
				return this._Quantity_Service;
			}
			set
			{
				if ((this._Quantity_Service != value))
				{
					this.OnQuantity_ServiceChanging(value);
					this.SendPropertyChanging();
					this._Quantity_Service = value;
					this.SendPropertyChanged("Quantity_Service");
					this.OnQuantity_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Tour_Detail_Service", Storage="_Booking_Tour", ThisKey="id_BookingTour", OtherKey="id_BookingTour", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Booking_Tour Booking_Tour
		{
			get
			{
				return this._Booking_Tour.Entity;
			}
			set
			{
				Booking_Tour previousValue = this._Booking_Tour.Entity;
				if (((previousValue != value) 
							|| (this._Booking_Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking_Tour.Entity = null;
						previousValue.Detail_Services.Remove(this);
					}
					this._Booking_Tour.Entity = value;
					if ((value != null))
					{
						value.Detail_Services.Add(this);
						this._id_BookingTour = value.id_BookingTour;
					}
					else
					{
						this._id_BookingTour = default(long);
					}
					this.SendPropertyChanged("Booking_Tour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Detail_Service", Storage="_Service", ThisKey="id_Service", OtherKey="id_Service", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Detail_Services.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Detail_Services.Add(this);
						this._id_Service = value.id_Service;
					}
					else
					{
						this._id_Service = default(long);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Discount;
		
		private string _name_discount;
		
		private System.Nullable<decimal> _value_calculate;
		
		private System.Nullable<System.DateTime> _begin_discount;
		
		private System.Nullable<System.DateTime> _end_discount;
		
		private EntitySet<Detail_Tour> _Detail_Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DiscountChanging(long value);
    partial void Onid_DiscountChanged();
    partial void Onname_discountChanging(string value);
    partial void Onname_discountChanged();
    partial void Onvalue_calculateChanging(System.Nullable<decimal> value);
    partial void Onvalue_calculateChanged();
    partial void Onbegin_discountChanging(System.Nullable<System.DateTime> value);
    partial void Onbegin_discountChanged();
    partial void Onend_discountChanging(System.Nullable<System.DateTime> value);
    partial void Onend_discountChanged();
    #endregion
		
		public Discount()
		{
			this._Detail_Tours = new EntitySet<Detail_Tour>(new Action<Detail_Tour>(this.attach_Detail_Tours), new Action<Detail_Tour>(this.detach_Detail_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Discount", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Discount
		{
			get
			{
				return this._id_Discount;
			}
			set
			{
				if ((this._id_Discount != value))
				{
					this.Onid_DiscountChanging(value);
					this.SendPropertyChanging();
					this._id_Discount = value;
					this.SendPropertyChanged("id_Discount");
					this.Onid_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_discount", DbType="NVarChar(200)")]
		public string name_discount
		{
			get
			{
				return this._name_discount;
			}
			set
			{
				if ((this._name_discount != value))
				{
					this.Onname_discountChanging(value);
					this.SendPropertyChanging();
					this._name_discount = value;
					this.SendPropertyChanged("name_discount");
					this.Onname_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value_calculate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> value_calculate
		{
			get
			{
				return this._value_calculate;
			}
			set
			{
				if ((this._value_calculate != value))
				{
					this.Onvalue_calculateChanging(value);
					this.SendPropertyChanging();
					this._value_calculate = value;
					this.SendPropertyChanged("value_calculate");
					this.Onvalue_calculateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_begin_discount", DbType="DateTime")]
		public System.Nullable<System.DateTime> begin_discount
		{
			get
			{
				return this._begin_discount;
			}
			set
			{
				if ((this._begin_discount != value))
				{
					this.Onbegin_discountChanging(value);
					this.SendPropertyChanging();
					this._begin_discount = value;
					this.SendPropertyChanged("begin_discount");
					this.Onbegin_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_discount", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_discount
		{
			get
			{
				return this._end_discount;
			}
			set
			{
				if ((this._end_discount != value))
				{
					this.Onend_discountChanging(value);
					this.SendPropertyChanging();
					this._end_discount = value;
					this.SendPropertyChanged("end_discount");
					this.Onend_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Detail_Tour", Storage="_Detail_Tours", ThisKey="id_Discount", OtherKey="id_Discount")]
		public EntitySet<Detail_Tour> Detail_Tours
		{
			get
			{
				return this._Detail_Tours;
			}
			set
			{
				this._Detail_Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight")]
	public partial class Flight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Flight;
		
		private string _AirPlane;
		
		private string _Flight_Number;
		
		private System.Nullable<System.DateTime> _Departure_Time;
		
		private System.Nullable<System.DateTime> _Arrival_Time;
		
		private string _Origin;
		
		private string _Destination;
		
		private System.Nullable<decimal> _Price;
		
		private string _Type;
		
		private string _Class;
		
		private System.Nullable<int> _NumberOfPassengers;
		
		private EntitySet<BookingFlightTour> _BookingFlightTours;
		
		private EntitySet<BookingIndividual> _BookingIndividuals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_FlightChanging(long value);
    partial void Onid_FlightChanged();
    partial void OnAirPlaneChanging(string value);
    partial void OnAirPlaneChanged();
    partial void OnFlight_NumberChanging(string value);
    partial void OnFlight_NumberChanged();
    partial void OnDeparture_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeparture_TimeChanged();
    partial void OnArrival_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnArrival_TimeChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnNumberOfPassengersChanging(System.Nullable<int> value);
    partial void OnNumberOfPassengersChanged();
    #endregion
		
		public Flight()
		{
			this._BookingFlightTours = new EntitySet<BookingFlightTour>(new Action<BookingFlightTour>(this.attach_BookingFlightTours), new Action<BookingFlightTour>(this.detach_BookingFlightTours));
			this._BookingIndividuals = new EntitySet<BookingIndividual>(new Action<BookingIndividual>(this.attach_BookingIndividuals), new Action<BookingIndividual>(this.detach_BookingIndividuals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Flight", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Flight
		{
			get
			{
				return this._id_Flight;
			}
			set
			{
				if ((this._id_Flight != value))
				{
					this.Onid_FlightChanging(value);
					this.SendPropertyChanging();
					this._id_Flight = value;
					this.SendPropertyChanged("id_Flight");
					this.Onid_FlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirPlane", DbType="VarChar(50)")]
		public string AirPlane
		{
			get
			{
				return this._AirPlane;
			}
			set
			{
				if ((this._AirPlane != value))
				{
					this.OnAirPlaneChanging(value);
					this.SendPropertyChanging();
					this._AirPlane = value;
					this.SendPropertyChanged("AirPlane");
					this.OnAirPlaneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight_Number", DbType="VarChar(10)")]
		public string Flight_Number
		{
			get
			{
				return this._Flight_Number;
			}
			set
			{
				if ((this._Flight_Number != value))
				{
					this.OnFlight_NumberChanging(value);
					this.SendPropertyChanging();
					this._Flight_Number = value;
					this.SendPropertyChanged("Flight_Number");
					this.OnFlight_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Departure_Time
		{
			get
			{
				return this._Departure_Time;
			}
			set
			{
				if ((this._Departure_Time != value))
				{
					this.OnDeparture_TimeChanging(value);
					this.SendPropertyChanging();
					this._Departure_Time = value;
					this.SendPropertyChanged("Departure_Time");
					this.OnDeparture_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrival_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Arrival_Time
		{
			get
			{
				return this._Arrival_Time;
			}
			set
			{
				if ((this._Arrival_Time != value))
				{
					this.OnArrival_TimeChanging(value);
					this.SendPropertyChanging();
					this._Arrival_Time = value;
					this.SendPropertyChanged("Arrival_Time");
					this.OnArrival_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(50)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPassengers", DbType="Int")]
		public System.Nullable<int> NumberOfPassengers
		{
			get
			{
				return this._NumberOfPassengers;
			}
			set
			{
				if ((this._NumberOfPassengers != value))
				{
					this.OnNumberOfPassengersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPassengers = value;
					this.SendPropertyChanged("NumberOfPassengers");
					this.OnNumberOfPassengersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_BookingFlightTour", Storage="_BookingFlightTours", ThisKey="id_Flight", OtherKey="id_Flight")]
		public EntitySet<BookingFlightTour> BookingFlightTours
		{
			get
			{
				return this._BookingFlightTours;
			}
			set
			{
				this._BookingFlightTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_BookingIndividual", Storage="_BookingIndividuals", ThisKey="id_Flight", OtherKey="id_Flight")]
		public EntitySet<BookingIndividual> BookingIndividuals
		{
			get
			{
				return this._BookingIndividuals;
			}
			set
			{
				this._BookingIndividuals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingFlightTours(BookingFlightTour entity)
		{
			this.SendPropertyChanging();
			entity.Flight = this;
		}
		
		private void detach_BookingFlightTours(BookingFlightTour entity)
		{
			this.SendPropertyChanging();
			entity.Flight = null;
		}
		
		private void attach_BookingIndividuals(BookingIndividual entity)
		{
			this.SendPropertyChanging();
			entity.Flight = this;
		}
		
		private void detach_BookingIndividuals(BookingIndividual entity)
		{
			this.SendPropertyChanging();
			entity.Flight = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HISTORY_BILL")]
	public partial class HISTORY_BILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_HISTORY;
		
		private System.Nullable<System.DateTime> _DATE_CREATE;
		
		private System.Nullable<int> _STATUS;
		
		private long _id_Bill;
		
		private EntityRef<Bill> _Bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HISTORYChanging(long value);
    partial void OnID_HISTORYChanged();
    partial void OnDATE_CREATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_CREATEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    partial void Onid_BillChanging(long value);
    partial void Onid_BillChanged();
    #endregion
		
		public HISTORY_BILL()
		{
			this._Bill = default(EntityRef<Bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HISTORY", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_HISTORY
		{
			get
			{
				return this._ID_HISTORY;
			}
			set
			{
				if ((this._ID_HISTORY != value))
				{
					this.OnID_HISTORYChanging(value);
					this.SendPropertyChanging();
					this._ID_HISTORY = value;
					this.SendPropertyChanged("ID_HISTORY");
					this.OnID_HISTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_CREATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_CREATE
		{
			get
			{
				return this._DATE_CREATE;
			}
			set
			{
				if ((this._DATE_CREATE != value))
				{
					this.OnDATE_CREATEChanging(value);
					this.SendPropertyChanging();
					this._DATE_CREATE = value;
					this.SendPropertyChanged("DATE_CREATE");
					this.OnDATE_CREATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Bill", DbType="BigInt NOT NULL")]
		public long id_Bill
		{
			get
			{
				return this._id_Bill;
			}
			set
			{
				if ((this._id_Bill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BillChanging(value);
					this.SendPropertyChanging();
					this._id_Bill = value;
					this.SendPropertyChanged("id_Bill");
					this.Onid_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_HISTORY_BILL", Storage="_Bill", ThisKey="id_Bill", OtherKey="id_Bill", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.HISTORY_BILLs.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.HISTORY_BILLs.Add(this);
						this._id_Bill = value.id_Bill;
					}
					else
					{
						this._id_Bill = default(long);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel")]
	public partial class Hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Hotel;
		
		private string _Name;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<int> _Ranking;
		
		private string _Description;
		
		private EntitySet<BookingHotelTour> _BookingHotelTours;
		
		private EntitySet<BookingIndividual> _BookingIndividuals;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_HotelChanging(long value);
    partial void Onid_HotelChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRankingChanging(System.Nullable<int> value);
    partial void OnRankingChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Hotel()
		{
			this._BookingHotelTours = new EntitySet<BookingHotelTour>(new Action<BookingHotelTour>(this.attach_BookingHotelTours), new Action<BookingHotelTour>(this.detach_BookingHotelTours));
			this._BookingIndividuals = new EntitySet<BookingIndividual>(new Action<BookingIndividual>(this.attach_BookingIndividuals), new Action<BookingIndividual>(this.detach_BookingIndividuals));
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Hotel", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Hotel
		{
			get
			{
				return this._id_Hotel;
			}
			set
			{
				if ((this._id_Hotel != value))
				{
					this.Onid_HotelChanging(value);
					this.SendPropertyChanging();
					this._id_Hotel = value;
					this.SendPropertyChanged("id_Hotel");
					this.Onid_HotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ranking", DbType="Int")]
		public System.Nullable<int> Ranking
		{
			get
			{
				return this._Ranking;
			}
			set
			{
				if ((this._Ranking != value))
				{
					this.OnRankingChanging(value);
					this.SendPropertyChanging();
					this._Ranking = value;
					this.SendPropertyChanged("Ranking");
					this.OnRankingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_BookingHotelTour", Storage="_BookingHotelTours", ThisKey="id_Hotel", OtherKey="id_Hotel")]
		public EntitySet<BookingHotelTour> BookingHotelTours
		{
			get
			{
				return this._BookingHotelTours;
			}
			set
			{
				this._BookingHotelTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_BookingIndividual", Storage="_BookingIndividuals", ThisKey="id_Hotel", OtherKey="id_Hotel")]
		public EntitySet<BookingIndividual> BookingIndividuals
		{
			get
			{
				return this._BookingIndividuals;
			}
			set
			{
				this._BookingIndividuals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Room", Storage="_Rooms", ThisKey="id_Hotel", OtherKey="id_Hotel")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingHotelTours(BookingHotelTour entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_BookingHotelTours(BookingHotelTour entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_BookingIndividuals(BookingIndividual entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_BookingIndividuals(BookingIndividual entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Room;
		
		private string _Amenities;
		
		private System.Nullable<int> _Num_Room;
		
		private System.Nullable<decimal> _Price;
		
		private string _Descriptions;
		
		private long _id_Hotel;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RoomChanging(long value);
    partial void Onid_RoomChanged();
    partial void OnAmenitiesChanging(string value);
    partial void OnAmenitiesChanged();
    partial void OnNum_RoomChanging(System.Nullable<int> value);
    partial void OnNum_RoomChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    partial void Onid_HotelChanging(long value);
    partial void Onid_HotelChanged();
    #endregion
		
		public Room()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Room", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Room
		{
			get
			{
				return this._id_Room;
			}
			set
			{
				if ((this._id_Room != value))
				{
					this.Onid_RoomChanging(value);
					this.SendPropertyChanging();
					this._id_Room = value;
					this.SendPropertyChanged("id_Room");
					this.Onid_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amenities", DbType="VarChar(255)")]
		public string Amenities
		{
			get
			{
				return this._Amenities;
			}
			set
			{
				if ((this._Amenities != value))
				{
					this.OnAmenitiesChanging(value);
					this.SendPropertyChanging();
					this._Amenities = value;
					this.SendPropertyChanged("Amenities");
					this.OnAmenitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Room", DbType="Int")]
		public System.Nullable<int> Num_Room
		{
			get
			{
				return this._Num_Room;
			}
			set
			{
				if ((this._Num_Room != value))
				{
					this.OnNum_RoomChanging(value);
					this.SendPropertyChanging();
					this._Num_Room = value;
					this.SendPropertyChanged("Num_Room");
					this.OnNum_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Hotel", DbType="BigInt NOT NULL")]
		public long id_Hotel
		{
			get
			{
				return this._id_Hotel;
			}
			set
			{
				if ((this._id_Hotel != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_HotelChanging(value);
					this.SendPropertyChanging();
					this._id_Hotel = value;
					this.SendPropertyChanged("id_Hotel");
					this.Onid_HotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Room", Storage="_Hotel", ThisKey="id_Hotel", OtherKey="id_Hotel", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._id_Hotel = value.id_Hotel;
					}
					else
					{
						this._id_Hotel = default(long);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Service;
		
		private string _name;
		
		private decimal _price;
		
		private System.DateTime _Date_Create;
		
		private System.Nullable<System.DateTime> _Date_Update;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Detail_Service> _Detail_Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ServiceChanging(long value);
    partial void Onid_ServiceChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnDate_CreateChanging(System.DateTime value);
    partial void OnDate_CreateChanged();
    partial void OnDate_UpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_UpdateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Service()
		{
			this._Detail_Services = new EntitySet<Detail_Service>(new Action<Detail_Service>(this.attach_Detail_Services), new Action<Detail_Service>(this.detach_Detail_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Service", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Service
		{
			get
			{
				return this._id_Service;
			}
			set
			{
				if ((this._id_Service != value))
				{
					this.Onid_ServiceChanging(value);
					this.SendPropertyChanging();
					this._id_Service = value;
					this.SendPropertyChanged("id_Service");
					this.Onid_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Update", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Update
		{
			get
			{
				return this._Date_Update;
			}
			set
			{
				if ((this._Date_Update != value))
				{
					this.OnDate_UpdateChanging(value);
					this.SendPropertyChanging();
					this._Date_Update = value;
					this.SendPropertyChanged("Date_Update");
					this.OnDate_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Detail_Service", Storage="_Detail_Services", ThisKey="id_Service", OtherKey="id_Service")]
		public EntitySet<Detail_Service> Detail_Services
		{
			get
			{
				return this._Detail_Services;
			}
			set
			{
				this._Detail_Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detail_Services(Detail_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Detail_Services(Detail_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Staff;
		
		private string _user_name;
		
		private string _pass_word;
		
		private string _fullName;
		
		private string _Phone;
		
		private string _Email;
		
		private System.Nullable<int> _Age;
		
		private string _Position;
		
		private string _Image;
		
		private System.Nullable<int> _Rating;
		
		private System.DateTime _Date_Create;
		
		private System.Nullable<System.DateTime> _Date_Update;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_StaffChanging(long value);
    partial void Onid_StaffChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onpass_wordChanging(string value);
    partial void Onpass_wordChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnDate_CreateChanging(System.DateTime value);
    partial void OnDate_CreateChanged();
    partial void OnDate_UpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_UpdateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Staff()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Staff", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Staff
		{
			get
			{
				return this._id_Staff;
			}
			set
			{
				if ((this._id_Staff != value))
				{
					this.Onid_StaffChanging(value);
					this.SendPropertyChanging();
					this._id_Staff = value;
					this.SendPropertyChanged("id_Staff");
					this.Onid_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass_word", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pass_word
		{
			get
			{
				return this._pass_word;
			}
			set
			{
				if ((this._pass_word != value))
				{
					this.Onpass_wordChanging(value);
					this.SendPropertyChanging();
					this._pass_word = value;
					this.SendPropertyChanged("pass_word");
					this.Onpass_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Update", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Update
		{
			get
			{
				return this._Date_Update;
			}
			set
			{
				if ((this._Date_Update != value))
				{
					this.OnDate_UpdateChanging(value);
					this.SendPropertyChanging();
					this._Date_Update = value;
					this.SendPropertyChanged("Date_Update");
					this.OnDate_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Bills", ThisKey="id_Staff", OtherKey="id_Staff")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_Tour;
		
		private string _Name;
		
		private string _Schedule;
		
		private string _Image;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _Departure_Day_Planned;
		
		private string _Duration;
		
		private System.Nullable<int> _Availability;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<long> _id_TourType;
		
		private long _id_Destination;
		
		private EntitySet<BookingFlightTour> _BookingFlightTours;
		
		private EntitySet<BookingHotelTour> _BookingHotelTours;
		
		private EntitySet<Detail_Tour> _Detail_Tours;
		
		private EntityRef<Destination> _Destination;
		
		private EntityRef<Tour_Type> _Tour_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_TourChanging(long value);
    partial void Onid_TourChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDeparture_Day_PlannedChanging(System.Nullable<System.DateTime> value);
    partial void OnDeparture_Day_PlannedChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnAvailabilityChanging(System.Nullable<int> value);
    partial void OnAvailabilityChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void Onid_TourTypeChanging(System.Nullable<long> value);
    partial void Onid_TourTypeChanged();
    partial void Onid_DestinationChanging(long value);
    partial void Onid_DestinationChanged();
    #endregion
		
		public Tour()
		{
			this._BookingFlightTours = new EntitySet<BookingFlightTour>(new Action<BookingFlightTour>(this.attach_BookingFlightTours), new Action<BookingFlightTour>(this.detach_BookingFlightTours));
			this._BookingHotelTours = new EntitySet<BookingHotelTour>(new Action<BookingHotelTour>(this.attach_BookingHotelTours), new Action<BookingHotelTour>(this.detach_BookingHotelTours));
			this._Detail_Tours = new EntitySet<Detail_Tour>(new Action<Detail_Tour>(this.attach_Detail_Tours), new Action<Detail_Tour>(this.detach_Detail_Tours));
			this._Destination = default(EntityRef<Destination>);
			this._Tour_Type = default(EntityRef<Tour_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tour", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_Tour
		{
			get
			{
				return this._id_Tour;
			}
			set
			{
				if ((this._id_Tour != value))
				{
					this.Onid_TourChanging(value);
					this.SendPropertyChanging();
					this._id_Tour = value;
					this.SendPropertyChanged("id_Tour");
					this.Onid_TourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure_Day_Planned", DbType="DateTime")]
		public System.Nullable<System.DateTime> Departure_Day_Planned
		{
			get
			{
				return this._Departure_Day_Planned;
			}
			set
			{
				if ((this._Departure_Day_Planned != value))
				{
					this.OnDeparture_Day_PlannedChanging(value);
					this.SendPropertyChanging();
					this._Departure_Day_Planned = value;
					this.SendPropertyChanged("Departure_Day_Planned");
					this.OnDeparture_Day_PlannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(10)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="Int")]
		public System.Nullable<int> Availability
		{
			get
			{
				return this._Availability;
			}
			set
			{
				if ((this._Availability != value))
				{
					this.OnAvailabilityChanging(value);
					this.SendPropertyChanging();
					this._Availability = value;
					this.SendPropertyChanged("Availability");
					this.OnAvailabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_TourType", DbType="BigInt")]
		public System.Nullable<long> id_TourType
		{
			get
			{
				return this._id_TourType;
			}
			set
			{
				if ((this._id_TourType != value))
				{
					if (this._Tour_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TourTypeChanging(value);
					this.SendPropertyChanging();
					this._id_TourType = value;
					this.SendPropertyChanged("id_TourType");
					this.Onid_TourTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Destination", DbType="BigInt NOT NULL")]
		public long id_Destination
		{
			get
			{
				return this._id_Destination;
			}
			set
			{
				if ((this._id_Destination != value))
				{
					if (this._Destination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DestinationChanging(value);
					this.SendPropertyChanging();
					this._id_Destination = value;
					this.SendPropertyChanged("id_Destination");
					this.Onid_DestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingFlightTour", Storage="_BookingFlightTours", ThisKey="id_Tour", OtherKey="id_Tour")]
		public EntitySet<BookingFlightTour> BookingFlightTours
		{
			get
			{
				return this._BookingFlightTours;
			}
			set
			{
				this._BookingFlightTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingHotelTour", Storage="_BookingHotelTours", ThisKey="id_Tour", OtherKey="id_Tour")]
		public EntitySet<BookingHotelTour> BookingHotelTours
		{
			get
			{
				return this._BookingHotelTours;
			}
			set
			{
				this._BookingHotelTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Detail_Tour", Storage="_Detail_Tours", ThisKey="id_Tour", OtherKey="id_Tour")]
		public EntitySet<Detail_Tour> Detail_Tours
		{
			get
			{
				return this._Detail_Tours;
			}
			set
			{
				this._Detail_Tours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Destination_Tour", Storage="_Destination", ThisKey="id_Destination", OtherKey="id_Destination", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Destination Destination
		{
			get
			{
				return this._Destination.Entity;
			}
			set
			{
				Destination previousValue = this._Destination.Entity;
				if (((previousValue != value) 
							|| (this._Destination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Destination.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._Destination.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._id_Destination = value.id_Destination;
					}
					else
					{
						this._id_Destination = default(long);
					}
					this.SendPropertyChanged("Destination");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Type_Tour", Storage="_Tour_Type", ThisKey="id_TourType", OtherKey="id_TourType", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tour_Type Tour_Type
		{
			get
			{
				return this._Tour_Type.Entity;
			}
			set
			{
				Tour_Type previousValue = this._Tour_Type.Entity;
				if (((previousValue != value) 
							|| (this._Tour_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour_Type.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._Tour_Type.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._id_TourType = value.id_TourType;
					}
					else
					{
						this._id_TourType = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tour_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingFlightTours(BookingFlightTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_BookingFlightTours(BookingFlightTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_BookingHotelTours(BookingHotelTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_BookingHotelTours(BookingHotelTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_Detail_Tours(Detail_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_Type")]
	public partial class Tour_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_TourType;
		
		private string _Name;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_TourTypeChanging(long value);
    partial void Onid_TourTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Tour_Type()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_TourType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_TourType
		{
			get
			{
				return this._id_TourType;
			}
			set
			{
				if ((this._id_TourType != value))
				{
					this.Onid_TourTypeChanging(value);
					this.SendPropertyChanging();
					this._id_TourType = value;
					this.SendPropertyChanged("id_TourType");
					this.Onid_TourTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Type_Tour", Storage="_Tours", ThisKey="id_TourType", OtherKey="id_TourType")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Type = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guest_with_Account")]
	public partial class Guest_with_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_guest_with_account;
		
		private string _user_name;
		
		private string _pass_word;
		
		private string _fullName;
		
		private string _Phone;
		
		private string _Email;
		
		private System.DateTime _Birthday;
		
		private string _Address;
		
		private string _Sex;
		
		private string _Image;
		
		private System.Nullable<System.DateTime> _Date_Create;
		
		private System.Nullable<System.DateTime> _Date_Update;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Booking_Tour> _Booking_Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_guest_with_accountChanging(long value);
    partial void Onid_guest_with_accountChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onpass_wordChanging(string value);
    partial void Onpass_wordChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDate_CreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_CreateChanged();
    partial void OnDate_UpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_UpdateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Guest_with_Account()
		{
			this._Booking_Tours = new EntitySet<Booking_Tour>(new Action<Booking_Tour>(this.attach_Booking_Tours), new Action<Booking_Tour>(this.detach_Booking_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_guest_with_account", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_guest_with_account
		{
			get
			{
				return this._id_guest_with_account;
			}
			set
			{
				if ((this._id_guest_with_account != value))
				{
					this.Onid_guest_with_accountChanging(value);
					this.SendPropertyChanging();
					this._id_guest_with_account = value;
					this.SendPropertyChanged("id_guest_with_account");
					this.Onid_guest_with_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass_word", DbType="VarChar(100)")]
		public string pass_word
		{
			get
			{
				return this._pass_word;
			}
			set
			{
				if ((this._pass_word != value))
				{
					this.Onpass_wordChanging(value);
					this.SendPropertyChanging();
					this._pass_word = value;
					this.SendPropertyChanged("pass_word");
					this.Onpass_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Update", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Update
		{
			get
			{
				return this._Date_Update;
			}
			set
			{
				if ((this._Date_Update != value))
				{
					this.OnDate_UpdateChanging(value);
					this.SendPropertyChanging();
					this._Date_Update = value;
					this.SendPropertyChanged("Date_Update");
					this.OnDate_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Guest_with_Account_Booking_Tour", Storage="_Booking_Tours", ThisKey="id_guest_with_account", OtherKey="id_guest_with_account")]
		public EntitySet<Booking_Tour> Booking_Tours
		{
			get
			{
				return this._Booking_Tours;
			}
			set
			{
				this._Booking_Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Booking_Tours(Booking_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Guest_with_Account = this;
		}
		
		private void detach_Booking_Tours(Booking_Tour entity)
		{
			this.SendPropertyChanging();
			entity.Guest_with_Account = null;
		}
	}
}
#pragma warning restore 1591
